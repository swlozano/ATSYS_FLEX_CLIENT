<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" 
	creationComplete="{creationCompleteHandler()}" close="returnName()" 
	 width="460" height="420" 
	 color="#FFFFFF" fontSize="12" fontWeight="bold"
	 borderSkin="CSS.SKIN.PopUpSkin" 
	  x="{(Application.application.width/2)-(this.width/2)}"
	  y = "{(Application.application.height/2)-(this.height/2)}"
	  showCloseButton="false"
	 initialize="{UtilidadesMl.getInstance().validarNavtilewindow(UtilidadesMl.getInstance().arrayTitulosAgregarCMenor,1,-1 ,true)}">
	<mx:CurrencyFormatter
    	id="formatoMoneda"
     	currencySymbol=""/> 
     	  
	<mx:Script>
        <![CDATA[
        	import MODEL.PantallasMl;
        	import MODEL.CajaMenorMl;
        	import mx.core.Application;
        	import MODEL.PermisosMl;
        	import MODEL.UtilidadesMl;
        	import EVENT.UsuariosSysEvent;
        	import MODEL.PersonaMl;
        	import EVENT.PersonaEvent;
        	import MODEL.CentroCostoMl;
        	import EVENT.CentroCostoEvent;
        	import mx.collections.ArrayCollection;
        	import MODEL.UsuariosSysMl;
        	import VO.UsuarioAlternoVO;
        	import mx.controls.Alert;
        	import mx.events.ValidationResultEvent;
        	import mx.validators.Validator;
        	import com.adobe.cairngorm.control.CairngormEventDispatcher;
        	import EVENT.CajaMenorEvent;
        	import VO.CajaMenorVO;
        	import mx.events.CloseEvent;       
            import mx.managers.PopUpManager;
            import mx.controls.Text;
           
           
           [Embed(source="/REC/IMAGENES/warn2.png")]
		    public var alerta:Class;
           
           [Bindable]
            public var formIsValid:Boolean=false;
            [Bindable]
            public var formIsEmpty:Boolean=false;
            
            private var focussedFormControl:DisplayObject;
           
            public function returnName():void {
                 PopUpManager.removePopUp(this);
                 PermisosMl.getInstance().CloseMainMenu.enabled=true;
		         UsuariosSysMl.getInstance().mostrarSubMenu=true;
            }
            
            public function addCajaMenor():void{
              
             if(cbxcentrocosto==null){
             	
              	  Alert.show("Se necesita Un Centro de Costo para Poder agregar una Caja Menor. Vaya a la otra vista para escoger uno","Mensaje de alerta",0,null,null,alerta,0);
               
             }else{
               
               if(formIsValid && cbxcentrocosto.selectedItem!=null){
                       
                       
                       
		               addMontoIncioCjMenor.text = UtilidadesMl.getInstance().combertirDecimalToEntero(addMontoIncioCjMenor.text);
		               addValMinNotifyCjMenor.text = UtilidadesMl.getInstance().combertirDecimalToEntero(addValMinNotifyCjMenor.text);
		               addMntoMinReCjMenor.text = UtilidadesMl.getInstance().combertirDecimalToEntero(addMntoMinReCjMenor.text);
		               var cajamenor:CajaMenorVO=new CajaMenorVO(0,cbxResponsable.selectedItem.id,addNomCjMenor.text,parseFloat(addMontoIncioCjMenor.text),parseFloat(addValMinNotifyCjMenor.text),parseFloat(addMntoMinReCjMenor.text),getUsuariosToNotificarSeleccionados(),cbxcentrocosto.selectedItem.id,getPersonaEsEmpresa(),0,false);
		               var event:CajaMenorEvent = new CajaMenorEvent(CajaMenorEvent.ADICIONAR_CAJA_MENOR,cajamenor);
		               CairngormEventDispatcher.getInstance().dispatchEvent(event);
		           	   returnName();
              
               }else{
               	
               	 		Alert.show("Se necesita Un Centro de Costo para Poder agregar una Caja Menor.","Mensaje de alerta",0,null,null,alerta,0);
                    
                    }
             }
              
            }
           
            
           
            public function getUsuariosToNotificarSeleccionados():Array
            {
            	
            	UsuariosSysMl.getInstance().idUsuNotificacion = new Array();
            	
            	for each( var x:* in UsuariosSysMl.getInstance().listUs)
            	{
            		if(x.asignado)
            			UsuariosSysMl.getInstance().idUsuNotificacion.push(x.id);
            	}
            	
            	return UsuariosSysMl.getInstance().idUsuNotificacion;
            }
            
           
            private function validateForm(event:Event):void{
            
               focussedFormControl = event.target as DisplayObject;
               formIsValid = true;
               validate(nameValidator);
               validate(validMontoincio);
               validate(ValorminValidator);
               validate(MontoMinValidator);
               if(cbxcentrocosto!=null){
               validate(ccostovalidator);
               }
               validate(responsablevalidator);
            }
            
            private function validate(validator:Validator):Boolean{
            
               var validatorSource:DisplayObject = validator.source as DisplayObject;
               var suppressEvents:Boolean = (validatorSource != focussedFormControl);
               var event:ValidationResultEvent = validator.validate(null, suppressEvents); 
               var currentControlIsValid:Boolean = (event.type == ValidationResultEvent.VALID);
               formIsValid = formIsValid && currentControlIsValid;
               return currentControlIsValid;
            } 
            
            private function creationCompleteHandler():void
            {
               
               CajaMenorMl.getInstance().Clon_pantallaagregarCajaMenor = this;	
               	
               resetFocus();
            }   
            
            private function prueba():void{
            	
            	var ob:Object = UsuariosSysMl.getInstance().concatenarNomUsuarios();
            	trace();
            	
            }
            
            private function getPersonaEsEmpresa():int{
            	
            	var retorno:int;
            	
            	for each(var x:* in PersonaMl.getInstance().listPersonas){
            		
            		if(x.esEmpresa==1){
            			
            			retorno = x.id;
            			break;
            			
            		}
            		
            	}
            	
            	return retorno;
            	
            }
            
            private function clearFormHandler():void
            {
               formIsEmpty=true;
               resetFocus();
            }
           
            private function ComprobarExistenciaPersona():void{
            	
            	
            	PantallasMl.ESTADO_PANTALLA = PantallasMl.getInstance().PANTALLA_ADD_COMPROBAR_EXISTENCIA_PERSONA;
            
            	PersonaMl.getInstance().cedulaToComprobar = cbxResponsable.selectedItem.cedula;
                var i:int = cbxResponsable.selectedItem.cedula; 
                var o:Object =  cbxResponsable.selectedItem;
                	
            	var e:PersonaEvent = new PersonaEvent(PersonaEvent.COMPROBAR_EXISTENCIA_PERSONAS,null);
            	CairngormEventDispatcher.getInstance().dispatchEvent(e);
            	
            }
           
            private function resetFocus():void
            {
                focusManager.setFocus(addNomCjMenor);
            }
            
            public function validarVal(valor:String,txt:TextInput):void{
            	
             var f:String = addValMinNotifyCjMenor.text;
             
             f =  UtilidadesMl.getInstance().combertirDecimalToEntero(f);
             
             
            	
             if(addValMinNotifyCjMenor.text!="" ){	
            	
            	if(parseFloat(valor) < parseFloat(f)){
            		
            	   	 Alert.show("El Monto de Inicio debe ser MAYOR al valor mínimo de notificación","Mensaje de alerta",0,null,null,alerta,0);
            	     txt.text="";
            	     addValMinNotifyCjMenor.text="";
            		
            	}
            	
             }
            	
            }
            
            
            public function validarMontos(valor:String,txt:TextInput):void{
            	
             var f:String = addMontoIncioCjMenor.text;
             
             f =  UtilidadesMl.getInstance().combertirDecimalToEntero(f);
             
             
            	
             if(addMontoIncioCjMenor.text!="" ){	
            	
            	if(parseFloat(valor) >= parseFloat(f)){
            		
            	   	 Alert.show("El Monto de Inicio debe ser MAYOR al valor mínimo de notificación","Mensaje de alerta",0,null,null,alerta,0);
            	     txt.text="";
            		
            	}
            	
             }else{
             	
                    Alert.show("Ingrese primero el Monto de Inicio","Mensaje de alerta",0,null,null,alerta,0);
            	     txt.text="";    
                  
                  }	
            	
            }
            
            public function lblfunction_nombreApe(item:Object):String{
            	
            	var retorno:String;
            	
            	retorno = item.nombre +" "+ item.apellido;
            	
            	return retorno; 
            	
            }
            
            public function checkall():void{
            
               
                UsuariosSysMl.getInstance().checarallCheckbox(); 
                          
               var cont:int=0;
               var ar:ArrayCollection = new ArrayCollection();
               ar=UsuariosSysMl.getInstance().listUs as ArrayCollection;
               for each(var x:* in UsuariosSysMl.getInstance().listUs){
               
                  if(checkbxselecallresponsables.selected){
                    
                    x.asignado=true;
                     
                  }else{
                  
                    x.asignado=false;
                    
                  }
                  ar.getItemAt(cont).asignado=x.asignado;
               		cont++;
               }
               UsuariosSysMl.getInstance().listUs=ar;
               
              
            }
            
        ]]>
    </mx:Script>
    
    <mx:StringValidator 
    	requiredFieldError="!!Este campo es Obligatorio. Ingrese el Nombre de la Caja Menor por favor¡¡"
    	tooShortError="!!Este campo necesita al menos 2 caracteres mínimo¡¡"
    	tooLongError="!!Demasiados caracteres¡¡"
        id="nameValidator"
        source="{addNomCjMenor}" 
        property="text"
        minLength="2"
        maxLength="100"
    />
    
   
   
   
   <mx:NumberValidator
   	
   	minValue="100"
    lowerThanMinError="!!El monto de Inicio tiene que ser mayor¡¡"
   	requiredFieldError="!!Este campo es Obligatorio. Ingrese el Monto de Inicio por favor¡¡"
   	maxValue="999999999"
   	exceedsMaxError="!!Monto excedido"
   	property="text"
   	id="validMontoincio"
   	source="{addMontoIncioCjMenor}"
   	
   	/>
   	
      	
   	
   	<mx:NumberValidator
   	
   	lowerThanMinError="Seleccione un Centro de Costo de la lista"
   	minValue="0"
   	property="selectedIndex"
   	source="{cbxcentrocosto}"
   	id="ccostovalidator"
   	
   	/> 
   	
   	<mx:NumberValidator
   	
   	lowerThanMinError="Seleccione un Responsable de la lista"
   	minValue="0"
   	property="selectedIndex"
   	source="{cbxResponsable}"
   	id="responsablevalidator"
   	
   	/> 
   	
   	<mx:NumberValidator
   	
   	minValue="100"
    lowerThanMinError="!!El valor mínimo para notificación es muy bajo¡¡"
   	requiredFieldError="!!Este campo es Obligatorio. Ingrese el Valor minimo para notificación por favor¡¡"
   	maxValue="999999999"
   	exceedsMaxError="!!Monto excedido"
   	property="text"
    id="ValorminValidator"
   	source="{addValMinNotifyCjMenor}" 
   	
   	/>
   
  <mx:NumberValidator
   	
   	minValue="100"
    lowerThanMinError="!!El monto mínimo de Reintegro es muy bajo¡¡"
   	requiredFieldError="!!Este campo es Obligatorio. Ingrese el Monto Minimo de Reintegro por favor¡¡"
   	maxValue="999999999"
   	exceedsMaxError="!!Monto excedido"
   	property="text"
    id="MontoMinValidator"
   	source="{addMntoMinReCjMenor}" 
   	
   	/>
    
   
      
      <mx:VBox  width="100%" height="100%" id="vbox1" horizontalAlign="center" verticalAlign="middle" >
       
        <mx:Box width="100%" height="35"  borderSkin="CSS.SKIN.BoxSkinUp" id="box1" verticalAlign="middle" horizontalAlign="center">
		 	<mx:Canvas width="100%" height="100%" id="canvas1"  fontSize="13">
		 		<mx:Label  id="lblAddCmenor" text="AÑADIR CAJA MENOR" color="#FFFFFF" fontWeight="bold" fontSize="13"
		 	     x="{(canvas1.width/2)-(lblAddCmenor.width/2)}" y="12"/>	
		 	</mx:Canvas>
		 </mx:Box>
       
       <mx:Box id="box2" height="79%" width="100%" borderSkin="CSS.SKIN.BoxSkinMedio" verticalAlign="middle" horizontalAlign="center">
         <mx:ViewStack width="100%" id="viewStack1" height="100%" selectedIndex="{UtilidadesMl.getInstance().current}">
      	            
      	            <mx:Box width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" id="box2_1">
      	             
      	             
				        <mx:Form  verticalScrollPolicy="off" width="94%" height="60%" >
				    	
						    	<mx:FormItem label="NOMBRE"  fontWeight="bold" color="#FFFFFF" width="100%" fontSize="11"> 	
							  	    <mx:TextInput maxChars="20" change="{validateForm(event)}" id="addNomCjMenor" width="80%"/>  	  	
							  	</mx:FormItem>
						    	
						    	 <mx:Spacer height="20" />
						    	
							  	<mx:FormItem label="MONTO DE INICIO"  fontWeight="bold" color="#FFFFFF" width="100%" fontSize="11"> 	
							  	    <mx:TextInput focusIn="{addMontoIncioCjMenor.text=UtilidadesMl.getInstance().combertirDecimalToEntero(addMontoIncioCjMenor.text)}" focusOut="{addMontoIncioCjMenor.text=UtilidadesMl.getInstance().formaterMoneda(addMontoIncioCjMenor.text)}" change="{validateForm(event),validarVal(addMontoIncioCjMenor.text,addMontoIncioCjMenor)}" restrict="0-9" id="addMontoIncioCjMenor" width="80%" />  	  	
							  	</mx:FormItem>
						    	
						    	<mx:Spacer height="20" />
						    	
						    	<mx:FormItem label="   VALOR MÍNIMO DE NOTIFICACIÓN" cornerRadius="20" fontWeight="bold" color="#FFFFFF" width="100%" fontSize="11"> 	
							  	    <mx:TextInput focusIn="{addValMinNotifyCjMenor.text=UtilidadesMl.getInstance().combertirDecimalToEntero(addValMinNotifyCjMenor.text)}" focusOut="{addValMinNotifyCjMenor.text=UtilidadesMl.getInstance().formaterMoneda(addValMinNotifyCjMenor.text)}" change="{validateForm(event),validarMontos(addValMinNotifyCjMenor.text,addValMinNotifyCjMenor)}" restrict="0-9" id="addValMinNotifyCjMenor" width="80%"/>  	  	
							  	</mx:FormItem>
							  	
							  	<mx:Spacer height="20" />
							  	
							  	<mx:FormItem label="MONTO MÍNIMO DE REINTEGRO"  fontWeight="bold" color="#FFFFFF" width="100%" fontSize="11"> 	
							  	    <mx:TextInput  focusIn="{addMntoMinReCjMenor.text=UtilidadesMl.getInstance().combertirDecimalToEntero(addMntoMinReCjMenor.text)}" focusOut="{addMntoMinReCjMenor.text=UtilidadesMl.getInstance().formaterMoneda(addMntoMinReCjMenor.text)}"  change="{validateForm(event)}" restrict="0-9" id="addMntoMinReCjMenor" width="80%" />  	  	
							  	</mx:FormItem>
							  	
							  	<mx:Spacer height="20" />
							  	
							  	<mx:FormItem label="RESPONSABLE DE CAJA MENOR" fontWeight="bold" color="#FFFFFF" width="100%" fontSize="11">
							  		<mx:ComboBox change="{ComprobarExistenciaPersona()}" prompt="Seleccione" toolTip="{cbxResponsable.selectedItem.nombre+' '+cbxResponsable.selectedItem.apellido}" id="cbxResponsable" dataProvider="{UsuariosSysMl.getInstance().listUsCbx}"  labelFunction="lblfunction_nombreApe" minWidth="{addMntoMinReCjMenor.width}" maxWidth="{addMntoMinReCjMenor.width}" color="#000000"/>
							  	</mx:FormItem>
					  	
					  	</mx:Form>
					  	
					 </mx:Box>
					 
					 <mx:Box width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
					     
					    <mx:Spacer height="7" /> 
					     
					     <mx:Box verticalAlign="middle" horizontalAlign="center"  fontWeight="bold" >
					     	  <mx:Label text="CORREOS DE NOTIFICACIÓN" color="#FFFFFF" fontSize="11" fontWeight="bold"/>
					     </mx:Box>
					           
	  				      <mx:Box verticalAlign="middle" horizontalAlign="center"  fontWeight="bold" >
					      
					  	      	    <mx:HBox>
		  	      	    	 			<mx:Label text="SELECCIONAR TODOS LOS CORREOS" color="#FFFFFF" fontSize="11" fontWeight="bold"/>
		  	      	       				<mx:CheckBox selected="false" id="checkbxselecallresponsables" change="checkall()" />	
		  	      	    			</mx:HBox>
	  	                   </mx:Box>
							  	   <mx:DataGrid width="90%" height="75%" id="dgUsCajamenor" dataProvider="{UsuariosSysMl.getInstance().listUs}"  textAlign="center" fontSize="10">
							  	      <mx:columns>
						                     <mx:DataGridColumn headerText="Nombres" dataField="nombre" textAlign="center" />
						                     <mx:DataGridColumn headerText="Apellidos" dataField="apellido" textAlign="center" />
										     <mx:DataGridColumn headerText="Asignado" dataField="id" width="80" textAlign="center">	  	     
							  	                        <mx:itemRenderer>
												    	           <mx:Component>
												    	            <mx:CheckBox  click="data.asignado=!data.asignado"  
												    	            	selected="{data.asignado}"  horizontalCenter="true"/>
												    	           </mx:Component>   
												    	</mx:itemRenderer>
											 </mx:DataGridColumn> 
									 </mx:columns>
							  	   </mx:DataGrid>
							  	   
							  	   <mx:VBox width="100%" horizontalAlign="center"   backgroundAlpha="1.0"   fontSize="12" color="#FFFFFF" fontWeight="bold" >
	    					           
	    					           <mx:HRule width="96%"/>
	    					           
				    					<mx:Box width="50%" verticalAlign="middle" horizontalAlign="center">
								    			<mx:Label text="APERTURA DE MOVIMIENTO" fontSize="11" color="#FFFFFF" textAlign="center" fontStyle="normal" fontWeight="bold"/>
								    	</mx:Box>
				    					
				    					<mx:Box width="80%" height="100%" verticalAlign="middle" horizontalAlign="center">
				    		                
								    		  <mx:Form width="100%">
								    		  	<mx:FormItem width="100%" label="CENTRO DE COSTO" color="#FFFFFF">
								    		  		 <mx:ComboBox toolTip="{cbxcentrocosto.selectedItem.nombre}" prompt="Seleccione" id="cbxcentrocosto" dataProvider="{CentroCostoMl.getInstance().listCentroCosto}" labelField="nombre" change="{validateForm(event)}" cornerRadius="5" color="#000000" maxWidth="181" minWidth="181"/>
								    		  	</mx:FormItem>
								    		  </mx:Form>
								    				
				    					</mx:Box>
	     				            </mx:VBox>
	     				            
							  	   
			                 </mx:Box>
			                 <mx:Box>
	     				            	
	     				            </mx:Box>
			           </mx:ViewStack>	
	    
	     		</mx:Box>
	    
    	<mx:Box width="100%" height="40"  borderSkin="CSS.SKIN.BoxSkinAbajo" id="box3" verticalAlign="middle" horizontalAlign="center">
	    <mx:HBox width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
	      
	      <mx:HBox height="100%" width="50%" verticalAlign="middle">
	      	<mx:Box horizontalAlign="right" verticalAlign="middle" width="50%">
	      		<mx:Image source="{UtilidadesMl.getInstance().backEnable==true?(UtilidadesMl.getInstance().rutaback):UtilidadesMl.getInstance().rutaback2}"
	      			  mouseOver="{UtilidadesMl.getInstance().validarNavtilewindow(UtilidadesMl.getInstance().arrayTitulosAgregarCMenor,1,viewStack1.selectedIndex,false)}" toolTip="Atras" />	
	      	</mx:Box>
	      	<mx:Box horizontalAlign="right" verticalAlign="middle" width="50%" disabledColor="#000000">
	      		<mx:Image id="ok" source="{formIsValid == true?UtilidadesMl.getInstance().rutaCheck:UtilidadesMl.getInstance().rutaCheck2}"  toolTip="Aceptar" enabled="{formIsValid}" click="{addCajaMenor()}" />	
	      	</mx:Box>
	      	
	      </mx:HBox>
	      <mx:HBox height="100%" width="50%" verticalAlign="middle">
	      		<mx:Box width="50%" verticalAlign="middle" horizontalAlign="left" >
	      			<mx:Image id="cancel" source="@Embed(source='REC/IMAGENES/delete.png')" click="{returnName()}" toolTip="Cancelar" 
	      				/>	
	      		</mx:Box>
	      		<mx:Box width="50%" verticalAlign="middle" horizontalAlign="left">
	      			<mx:Image source="{UtilidadesMl.getInstance().nextEnable==true?(UtilidadesMl.getInstance().next):UtilidadesMl.getInstance().next2}"  toolTip="Siguiente" mouseOver="{formIsEmpty=true,UtilidadesMl.getInstance().validarNavtilewindow(UtilidadesMl.getInstance().arrayTitulosAgregarCMenor,1,viewStack1.selectedIndex,true)}"/>	
	      		</mx:Box>
	      		
	    	</mx:HBox>
	    </mx:HBox>
				 	
	 </mx:Box>
    
    </mx:VBox>
    
</mx:TitleWindow>







